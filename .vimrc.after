au BufEnter * if match( getline(1) , '^\#!') == 0 | execute("let b:interpreter = getline(1)[2:]") | endif

fun! CallInterpreter()
    if exists("b:interpreter")
         exec ("!".b:interpreter." %")
    endif
endfun

map <F5> <ESC>:w<CR>:call CallInterpreter()<CR>

""""""""""""""""""""""""""""""""""
" Syntax and indent
""""""""""""""""""""""""""""""""""
set showmatch  "Show matching bracets when text indicator is over them

" Switch on filetype detection and loads 
" indent file (indent.vim) for specific file types
filetype indent on
filetype on
set autoindent " Copy indent from the row above
set si " Smart indent

set expandtab
set shiftwidth=4
set softtabstop=4
syn case match
syn sync minlines=80

map <F11> :!ctags -R -f ./tags . &<CR>
set tags=~/.jstags,~/.tags,./tags

nnoremap <C-]> :execute 'tj' expand('<cword>')<CR>zv

"omnicomplete
inoremap <C-Space> <C-X><C-I>

" Resize splits
nnoremap <silent> + :exe "vertical resize " . (winwidth(0) * 4/3)<CR>
nnoremap <silent> = :exe "vertical resize " . (winwidth(0) * 4/3)<CR>
nnoremap <silent> - :exe "vertical resize " . (winwidth(0) * 3/4)<CR>

cabbrev sp vsp
cabbrev split vsplit
cabbrev hsplit split
cabbrev sta vertical sta
cabbrev help vertical help
cabbrev new vnew
cabbrev right botright

"Ctrl-Shift-ArrowKeys = resize active split
nnoremap <C-S-Left> <C-W><lt>
nnoremap <C-S-Right> <C-W>>
nnoremap <C-S-Up> <C-W>+
nnoremap <C-S-Down> <C-W>-

"Ctrl-ArrowKeys = move between splits
nnoremap <C-Left> <C-W><left>
nnoremap <C-Right> <C-W><right>
nnoremap <C-Up> <C-W><up>
nnoremap <C-Down> <C-W><down>

nnoremap <C-\> :vsp<CR>

"tab handling
nnoremap \t :tab sp<CR>
nnoremap \w :tabc<CR>

nnoremap ; :
vnoremap ; :
vnoremap : ;

"F2 toggles line numbers
nnoremap <silent> <F2> :set nonumber!<CR>:set foldcolumn=0<CR>

nnoremap <silent> <Leader>t :TagbarToggle<CR>

"make Y behave more like C and D
nmap Y y$ 

" Ack features
nnoremap \a :Ack 
nnoremap \A :Ack <C-r><C-w><CR> 
nnoremap \j :Ack --js --ignore-dir=/opt/adss/a2/a2/a2/public/js/lib --ignore-dir=/opt/adss/a2/a2/a2/public/bootstrap.css --ignore-dir=/opt/adss/a2/a2/a2/public/bootstrap --ignore-dir=/opt/adss/a2/a2/a2/public/fontawesome 
nnoremap \J :Ack --js --ignore-dir=/opt/adss/a2/a2/a2/public/js/lib --ignore-dir=/opt/adss/a2/a2/a2/public/bootstrap.css --ignore-dir=/opt/adss/a2/a2/a2/public/bootstrap --ignore-dir=/opt/adss/a2/a2/a2/public/fontawesome <C-r><C-w><CR>

" Ack results/compiler
"ctrl-j/k to jump between 'compiler' messages
nnoremap <silent> <C-j> :cn<CR>
nnoremap <silent> <C-k> :cp<CR>


"color schemes
if has("gui_running")
  colorscheme inkpot
else
  colorscheme wombat256
endif

" Pylint

"source ~/.vim/compiler/pylint.vim

"pylint settings
augroup ftpy2
        autocmd!
        autocmd FileType python compiler pylint
augroup end

command! A2 cd /opt/adss/a2

let g:pylint_inline_highlight = 0
let g:pylint_onwrite = 0
let g:pylint_signs = 0

nnoremap <silent> <Leader>p :Pylint<CR> :copen<CR>
nnoremap <silent> <Leader>c :cclose<CR>
nnoremap <silent> <Leader>C :copen<CR>

" Tagbar
let g:tagbar_autofocus = 1
let g:tagbar_singleclick = 1
let g:tagbar_autoshowtag = 1


" fix syntax hl:
nnoremap U :syntax sync fromstart<cr>:redraw!<cr>

"try the following line in your .vimrc

nnoremap <leader>v :tabe ~/.vimrc.after \| vert sview /shared/home/mboehm/.vimrc<CR>

"with the cursor in your vimrc (NOT on mine), to exit you can do something like:

"save | close tab | reload vimrc
nnoremap <leader>V :w \| tabc \| so ~/.vimrc.after<CR>
